# Задание 1
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def div(x1, x2):
    try:
        x1, x2 = int(x1), int(x2)
        dif = float(x1 / x2)
    except ValueError:
        return "Error"
    except ZeroDivisionError:
        return "На ноль делить нельзя!"
    return round(dif, 4)
print(div(input('Введите первое число: '), input('Введите второе число: ')))

# Задание 2
# Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.

def info(**kwargs):
    return ' '.join(kwargs.values())
print (info(name=input('Введите Ваше имя: '), surname=input('Введите Вашу фамилию: '), date=input('Введите дату раждения: '), place=input('Введите город проживания: '), email=input('Введите Ваш e-mail: '), phone=input('Ваш номер телефона:')))

# Задание 3
# Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def func(x1, x2, x3):
    return sum(sorted([x1, x2, x3])[1:])
print(func(332, 45, 1))

# Задание 4
# Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y.
# Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.

def my_fun(x, y):
    try:
        result = x ** y
    except TypeError:
        return 'Введите действительной число и отрицательную степень'
    return result
print(my_fun(2.2, -2))

# Задание 5
# Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
# Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def summa():
    m = 0
    while True:
        list = input('Введите число. Чтобы выйти, введите "Q".').split()
        for num in list:
            if num.upper()  == "Q":
                return m
            else:
                try:
                    m += int(num)
                except ValueError:
                    print('Чтобы выйти, введите "Q".')
        print(f'Сумма чисел равна {m}')
print(summa())

# Задание 6
# Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def function(word):
    latin = 'asdfghjkl'
    return word.title() if not set(word).difference(latin) else False


words = input('Введите слова через пробел: ').split()
for o in words:
    result = function(o)
    if result:
        print(function(o), ' ')

# Задание 7
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Используйте написанную ранее функцию int_func().